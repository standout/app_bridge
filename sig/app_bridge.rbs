module AppBridge
  VERSION: String
  # See the writing guide of rbs: https://github.com/ruby/rbs#guides

  class App
    def initialize: (String) -> void

    def triggers: () -> Array[String]

    def actions: () -> Array[String]

    def fetch_events: (TriggerContext) -> TriggerResponse

    def execute_action: (ActionContext) -> ActionResponse
  end

  class Connection
    def self.new: (String, String, String) -> Connection

    def id: () -> String

    def name: () -> String

    def serialized_data: () -> String
  end

  class TriggerEvent
    def self.new: (String, Integer, String) -> TriggerEvent

    def id: () -> String

    def timestamp: () -> Integer

    def serialized_data: () -> String
  end

  class TriggerResponse
    def self.new: (String, Array[TriggerEvent]) -> TriggerResponse

    def store: () -> String

    def events: () -> Array[TriggerEvent]
  end

  class TriggerContext
    def self.new: (String, Connection, String, String) -> TriggerContext

    def trigger_id: () -> String

    def connection: () -> Connection

    def store: () -> String

    def serialized_input: () -> String
  end

  class ActionContext
    def self.new: (String, Connection, String) -> ActionContext

    def action_id: () -> String

    def connection: () -> Connection

    def serialized_input: () -> String
  end

  class ActionResponse
    def self.new: (String) -> ActionResponse

    def serialized_output: () -> String
  end
end
